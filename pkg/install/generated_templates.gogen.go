// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 836,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4b\xaf\xd3\x30\x10\x85\xf7\xfe\x15\x47\xba\x8b\x0b\xe8\x26\xa8\x3b\x94\x5d\xdb\x05\x0b\x10\x8b\xf0\xd8\x20\x16\x63\x7b\x42\x4d\x5d\x3b\xf2\x23\x3c\xa2\xfc\x77\x94\xa4\x95\x9a\xb6\x20\x55\xba\x3b\x7b\x7c\xc6\x73\xe6\xe8\x2b\x8a\x42\x3c\xe0\xd3\x8e\x11\x39\x74\x46\x31\x48\x29\x9f\x5d\x7a\x82\xb2\x39\x26\x0e\x08\xde\x72\x7c\x02\x39\xbd\x28\x41\x1a\xa7\x8d\xfb\x0e\x0a\x2c\x1e\xe0\x9d\xfd\x0d\xc7\xac\x59\xa3\xf1\x01\xef\xb2\xe4\xe0\x38\x71\xc4\x4f\x93\x76\x53\x4b\x21\x29\xb2\x1e\x27\x70\x8c\x50\xde\xa5\xe0\x2d\x5e\xd4\x9b\xf5\xf6\x65\x29\xa8\x35\x5f\x38\x44\xe3\x5d\x85\x6e\x25\xf6\xc6\xe9\x0a\x1f\x67\x57\xeb\xd9\x94\x38\x70\x22\x4d\x89\x2a\x01\x58\x92\x6c\xe3\x78\x02\x1c\x1d\xb8\x42\x63\xf3\x2f\x71\x7e\xe9\x7b\x98\x06\xe5\x07\x3a\x70\x6c\x49\x31\x86\xe1\xf8\x3e\x5d\x2b\xf4\xfd\xf2\xb5\xef\xc1\x4e\x0f\x83\x18\x73\x39\x37\x14\x24\xa9\x92\x72\xda\xf9\x60\xfe\x50\x32\xde\x95\xfb\x37\xb1\x34\xfe\x75\xb7\x92\x9c\xe8\xe4\x77\x3b\x27\x54\x7b\xcb\xf7\x9a\x15\x21\x5b\x9e\x24\x05\xa8\x35\x6f\x83\xcf\x6d\xac\xf0\xf5\xf1\xd5\xe3\xb7\xa9\x2f\x70\xf4\x39\x28\x5e\x14\x3b\x0e\xf2\xac\x50\xc0\x79\x57\x1f\x85\x9f\xeb\xf7\xff\xd6\x3e\xc3\x86\x9b\x99\x80\xfb\x17\xf5\x96\x6b\x6e\x46\xd1\x69\xd1\xff\xcc\x17\xc0\x75\xb6\x8b\xff\x62\x96\x3f\x58\xa5\x63\x76\x37\xc1\xb9\xb2\x73\x89\xc1\x25\x27\xb7\xc8\xb0\x71\x3c\x69\x6e\x28\xdb\x34\xa3\x32\x12\xf5\x37\x00\x00\xff\xff\xfd\x7f\x67\x6a\x44\x03\x00\x00"),
		},
		"/flux-config.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-config.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 463,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\x8f\x16\x6f\xdd\x82\x1e\xf7\x26\x05\xc1\x83\x5e\x14\xef\xc3\x66\xb6\x1d\xdc\x26\x4b\x32\xdb\x0a\x31\xff\x5d\x36\xa1\xcb\x2a\x9e\x32\xc3\xbc\xf7\x65\x5e\x92\x12\xa4\xc7\xfe\xe0\x5d\x2f\xc7\x27\x19\xf8\xe0\x9d\xb2\x53\x34\x39\x9b\xa6\x69\xcc\x16\xef\x27\x46\xef\x87\xc1\x5f\xc5\x1d\x21\x11\x53\x64\x0b\xf5\x18\x83\xbf\x88\x65\x10\xba\x62\x9f\x02\xa9\x78\x87\xde\x07\xf4\xc3\xf4\x65\xf7\x66\x8b\xe7\x85\xfe\x18\xeb\xf9\x42\xe3\x4c\x89\xac\x33\x44\xc3\xc4\x3b\xe8\x89\xff\x40\x24\xa2\x0b\x4c\xca\xd6\x6c\x41\x11\x84\xc5\xbd\x83\xd7\x13\x87\xab\x44\x86\xe8\x4a\x59\x75\x6f\xdc\x05\xd6\xbd\xa1\x51\x3e\x38\x44\xf1\xae\xc5\xe5\xde\x7c\x8a\xb3\x2d\x7e\xe5\x5d\x6f\x94\xf3\x52\xa7\x04\x1e\x22\x23\xe7\x8a\x9a\x7b\x67\x91\xb3\x39\xb3\x92\x25\xa5\xd6\x00\x8e\xce\xdc\x96\x9c\x4d\xdd\xdc\xe0\x46\x7f\xa5\x33\xc7\x91\x3a\x2e\xaf\x58\xa5\xa5\x2f\xf7\xaf\xc6\x65\x9a\x52\x73\xe3\x57\x76\x4a\x18\x83\x38\xed\xb1\xb9\x8b\x9b\xff\x3e\xe7\x1b\xe2\xec\x5c\x3c\xcc\xae\x15\xe0\x27\x00\x00\xff\xff\x02\xd2\xd6\x67\xcf\x01\x00\x00"),
		},
		"/flux-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 8180,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x5b\x6f\xdb\x46\xf6\x7f\xd7\xa7\x38\x50\xfe\x40\x62\x40\xa4\xec\xba\x2d\xfe\x60\xd7\xc5\xa6\xb9\xb8\xde\x34\xa9\x11\xc7\xbb\xe8\x53\x3d\x22\x8f\xc4\x81\x86\x33\xdc\x39\x43\xa9\x82\xd1\xef\xbe\x38\x33\xbc\x0c\x25\x59\xce\xf6\x6d\xf3\x10\xdb\xe4\x99\x73\xbf\xfc\xe6\x30\x49\x92\x89\xa8\xe5\x3f\xd1\x92\x34\x3a\x03\x51\xd7\x34\xdf\x5c\x4c\xd6\x52\x17\x19\xbc\xc5\x5a\x99\x5d\x85\xda\x4d\x2a\x74\xa2\x10\x4e\x64\x13\x00\x2d\x2a\xcc\x60\xa9\x9a\x3f\x1e\x1f\x41\x2e\x21\xfd\x24\x2a\xa4\x5a\xe4\x08\x7f\xfe\xd9\xbe\xf7\x7f\x66\xf0\xf8\x38\x7e\xfb\xf8\x08\xa8\x0b\x26\xa3\x1a\x73\x66\x66\xb1\x56\x32\x17\x94\xc1\xc5\x04\x80\x50\x61\xee\x8c\xe5\x37\x00\x95\x70\x79\xf9\x8b\x58\xa0\xa2\xf0\x20\x96\xcd\xd4\xce\x0a\x87\xab\x5d\x78\xe9\x76\x35\x66\xf0\x19\x73\x8b\xc2\xe1\x04\xc0\x61\x55\x2b\xe1\xb0\x65\x16\x59\xc0\xff\x84\xd6\xc6\x09\x27\x8d\xee\x99\x03\xd4\xd6\x54\xe8\x4a\x6c\x28\x95\x66\x5e\x1b\xeb\x32\x98\x5e\x9e\x5f\x5e\x4c\xe1\x05\x38\x54\x2a\xa2\x00\x67\x80\x72\x2b\x6a\x84\x79\x85\xce\xca\x9c\xd8\xb8\xda\x48\xed\x5e\x12\xf0\xe1\xb4\x65\xac\x46\x36\xec\x59\x01\xd0\xf9\xc2\xff\x8e\x76\x23\x73\x7c\x9d\xe7\xa6\xd1\xee\xd3\x98\x10\x60\x63\x54\x53\x61\xcf\x2a\x69\x59\xad\xa4\x4b\xd6\xb8\xeb\x05\x10\x7b\xc1\x0d\x02\xbb\x27\x03\xbf\x84\x8f\x14\x3e\xc0\x11\x55\x81\x4b\xd1\x28\xf7\xd1\x14\x98\xc1\xf9\xb7\xe7\xe7\xf0\x02\xb6\x25\x6a\xa8\x58\x1b\x2c\xc0\xa2\x28\x12\xa3\xd5\x6e\x06\x5b\x84\xad\xd1\x2f\x1d\x2c\x10\xc4\x42\x21\xfb\x23\x2f\x2b\x53\x4c\x5a\x86\x2f\xe0\x4b\x29\x09\x24\x81\x00\x57\xd5\x4b\x82\x86\xb0\x80\xa5\xb1\xb0\x42\x8d\x56\x38\xa9\x57\x70\x77\xf7\x33\xac\x71\x47\x29\xdc\x68\xf8\xf0\xff\x04\x3f\x5e\xc1\x45\x7a\x71\x3e\xeb\xb9\x74\xb2\x83\x09\x04\xc2\x62\xac\x07\x19\x56\x45\x23\x16\x20\x80\xb0\x16\x9c\x14\xad\xa3\x60\x8b\x3d\x9b\x5c\x68\xd8\x5a\xe9\x58\xd1\xf4\xb8\xff\x56\xa8\x7b\x67\x60\x55\xbb\xdd\x5b\x69\x63\x27\x56\x58\xc8\xa6\xca\xe0\x23\x56\xc6\xee\x62\x3b\x11\x96\x46\x29\xb3\x65\x8b\x5a\xd1\x92\xbc\xa9\x0d\xf1\x33\x01\x79\x43\xce\x54\x92\x3d\xb0\xd6\x66\xab\x7f\x2f\x0d\x39\xea\x59\x2c\xa5\xc2\x19\x6c\x4b\x99\x97\xb0\x33\x0d\x6c\xa5\x52\xc1\x28\x67\xa0\x30\x5c\x67\xfc\x98\x0f\xf1\x2f\x16\xcc\x56\xb3\xda\x3d\x03\x8b\xb5\x01\x2b\x5c\x89\x16\x5c\x29\x74\x2b\x78\x25\x5d\xd9\x2c\xc0\xf0\x43\x04\x25\xd7\x98\xc2\x6f\xa6\x79\xa9\x14\x08\x45\xa6\x13\x31\x76\x36\x48\x07\x52\x3b\xe3\xcf\xe4\x46\x3b\x21\x35\xda\x19\x2c\x50\x99\x6d\x0a\x77\x38\x78\xb5\x74\xae\xa6\x6c\x3e\x2f\x4c\x4e\x29\x27\x56\x5e\x70\xe9\xa0\x9e\x73\xe9\x91\x9b\xaf\x1a\x59\x20\xcd\x1b\xc2\xa4\xb6\x72\x23\x1c\xfa\xd4\x63\x43\xd2\xd2\x55\xaa\xe7\xd4\xc5\x82\xa8\x4c\x72\xa3\x97\x72\xd5\xbf\x02\x08\x0f\x3e\x8a\x3a\x8b\x1e\xc6\x85\x94\x44\xc7\xfe\x6a\x5c\xd2\x75\xb3\xc0\x79\x60\x32\xa4\xdf\xb3\x31\xd9\x4a\x2a\xf9\x49\x29\x36\x08\x02\x0a\xb9\x5c\xa2\xe5\xa6\xd9\x71\x68\xab\x6a\x68\x8c\x3e\x04\x81\x5d\x1c\x04\x6e\x2e\x1b\x59\x60\xe7\xf6\xa5\x5c\x55\xa2\x1e\x14\x91\xae\x04\xa1\x01\xb5\xb3\x3b\x6f\xc3\x43\x20\x7a\x98\x81\xd0\x05\x34\x3a\x37\x15\x77\x6b\x7f\x3e\x58\xfb\xd1\x87\x53\xe8\xa2\xe7\x82\x7a\xe3\x39\x48\xa4\x36\x9e\x07\x11\x60\x37\xfc\x85\x08\x44\xc7\x9e\x8d\x80\xef\x04\xce\x80\xac\xb8\x4f\xc2\xf5\xed\xb5\x6f\x02\xf0\x8a\xcd\x22\xb9\xd2\x52\x0f\xc2\xd9\xb8\x0d\x5a\xb9\x94\xb9\x6f\xd8\x50\x37\xb6\x36\x84\x74\xf6\x15\x8e\xec\xb9\x84\xf6\x11\xbc\xc8\x0e\x62\x79\x5f\xe1\x38\x10\x76\x35\x94\xe9\x13\x1e\x5b\xd5\x2b\xee\x1f\x14\xb9\x66\xdc\x82\x5f\x3c\xd1\x84\x0f\xcf\x1d\x69\xc2\x9d\x3b\x1f\x1f\x13\x3f\x6f\xdf\x78\x27\xbf\x97\x0a\xdf\x18\xed\x58\x6f\x3f\x77\xbf\xce\xe3\x9d\x6b\x44\x1b\xd1\xc6\x06\x9f\xb2\xe3\x59\xa7\x62\xc4\x69\x38\x1f\xc6\x6a\xc1\x0a\xb0\x97\x92\xb6\xd8\x12\x6e\x5c\xc0\xfe\x63\x5f\x29\xa9\x07\x87\x9b\xda\x33\x96\xd4\xc9\x2c\x52\xb8\xe9\xd5\x7f\x4d\x6f\xba\x8c\x62\x12\x42\xc7\xda\x39\xdb\xe0\x6c\x14\xb6\xb1\x96\x3c\x4c\x88\x9a\x2a\xd8\xc2\x93\x07\x7a\x36\x33\x30\xdc\xfd\xb6\x92\xd0\x37\xb0\x9e\xb4\xe7\xd5\x1d\xb9\xf3\x71\x48\x8f\xba\x35\xd6\xab\x77\x6b\x12\xe7\x79\x6b\x78\x70\x4d\x3f\x1d\x0e\xea\x63\xaf\x3a\x46\x05\xc5\x22\x19\x08\x25\xbd\x84\x56\x89\x57\xda\xb8\x23\x9a\x9c\xfd\x57\xaa\x7c\xc5\xf4\xff\x0a\x6d\x5a\xa0\x36\xe9\xcd\x0b\x53\xe0\x00\x7b\x44\xe8\xa4\xcd\x1a\x8b\x7e\x46\x6b\x03\xd3\x2c\x4c\x81\x29\xc8\x4a\xac\x90\xfa\x2c\x4b\xe1\xbd\xd4\x85\xcf\xa4\x8a\x47\x9a\xc5\x7c\xe8\x98\x61\x9c\x29\x14\x84\x3c\xb8\xfc\x51\x6e\x00\x8c\x51\x41\xb8\x7e\xe6\x94\xcd\x22\x2d\x4c\xbe\x46\x9b\xe6\xa6\x9a\xdb\x79\x98\x3f\xfe\xc7\xdc\x89\xbe\x6c\xbb\x1e\xc2\x58\x93\x71\x28\x4b\x75\x62\x05\xac\x69\xda\xd3\x78\x31\x19\xb4\x0c\xa5\x89\xb9\x65\x17\xe9\xc5\x77\xe9\xf9\x98\xf6\xb6\x51\xea\xd6\x28\x99\xef\x32\xb8\x59\x7e\x32\xee\xd6\x22\xc5\x56\x58\x24\xd3\xd8\x1c\x29\x0e\x85\xc5\x7f\x37\x48\x6e\xf4\x0c\x20\xaf\x9b\x0c\xbe\x3b\xaf\x46\x0f\x2b\x0f\x33\x32\xf8\xfe\xdb\x8f\x72\x80\xa8\xc6\xc6\x87\x93\x21\x32\xb7\x1e\xae\x5e\x9e\x5f\x32\x6a\x93\x7a\x69\x6c\xe5\x8b\x46\xa8\x9e\x5a\xc9\x0d\x6a\x24\xba\xb5\x66\x81\xb1\x06\xec\xd2\xeb\x71\xce\x04\x51\x81\xe1\xf8\xb1\x70\x65\x06\x73\x51\xcb\xe0\xe9\xcd\xf7\x73\x59\xa0\x76\xd2\xed\xd2\xba\x59\x44\xb4\x52\x4b\x27\x85\x7a\x8b\x4a\xec\xee\x78\x36\x14\x94\xc1\x77\x11\x81\x93\x15\x9a\xc6\x1d\x79\xc7\x00\x4f\xfe\x6f\xa8\x1a\x0d\x8c\x51\x60\x8e\x43\x73\x08\x10\xeb\x36\x68\x86\x2e\xf7\x9a\x15\x73\xa2\x32\x74\x28\x7f\xeb\x01\x65\xda\x59\xb7\xe2\x90\x81\xd4\x21\xe7\x5e\x52\x38\x43\x54\xce\x47\x35\xdc\xf9\xec\x57\xad\x76\x99\x6f\xa3\xcc\x8d\xf1\xb7\x9f\x8e\x8b\x16\x54\x70\x49\xd5\x68\x97\xc6\xe6\xc8\x4c\x03\xe0\x66\xbc\xfd\x94\xe2\x31\x26\x1e\xeb\xbe\x11\xb6\xd5\x3d\x90\xfd\x35\xf5\xa3\x1a\xbd\xd1\xb9\x6a\xfc\xd4\xe6\x6b\x43\x00\x57\xdd\x44\x0f\xb8\xf4\x19\x18\xdd\x01\xe9\x1f\xf8\xe8\x1e\xc4\x1d\x86\x59\x81\xb9\x12\x96\xaf\x0b\x0b\xb3\x89\x1a\xc0\x09\x08\x1a\x46\x73\x6c\xbc\x35\xc6\xcd\x53\xa2\xf2\x49\x03\x84\x1e\x49\x9d\x0e\xf0\x68\x1a\x24\xcf\x3a\x92\x88\x03\xea\x8d\xb4\x46\x7b\x30\x12\x70\xde\xf4\xc3\xfd\x4f\xef\xde\xfc\xfa\xe9\xfd\xcd\xf5\x34\xc0\x8f\x19\xfb\xc3\x6c\xd0\xda\x31\x56\x8c\xd8\xf8\x61\xbf\xd8\x05\x24\xe7\xd4\x31\x1b\x0f\x40\xde\xa1\x8d\x43\x72\x32\xf1\x93\x86\x32\xa8\xe0\x4b\x6f\x27\x8d\x5b\x74\x04\x83\x5b\xed\x7c\x4c\x22\x16\xfb\x60\x3a\x0e\xba\x47\xd2\xdd\xb5\x4f\x68\x10\xca\xa1\xd5\x7c\xad\x3b\xd0\x78\x69\x4d\xd5\x63\x99\x8a\x41\x80\x20\x4e\xb7\x16\xd1\xb1\x1b\x94\xc9\xd7\x74\x18\x6c\xd4\x9b\xec\x88\x5f\x06\x77\x8f\xfc\xb2\x11\xaa\xc1\x03\x9f\x3c\x97\xc4\xfb\x39\xd0\xe1\xbd\x13\x19\xc0\x70\x73\x0c\x33\x4f\x00\xcd\x27\xf2\x92\xa9\x02\xb2\x1e\xd1\x8d\xfb\xc3\xa0\x74\xbb\xc6\x39\x84\x95\x03\x20\xe8\xaf\x86\x14\x25\x5c\x67\x56\x88\x01\x1b\x74\xe4\xd6\x78\xd0\x57\x4e\x00\x97\x27\xd2\x2f\x52\x74\x1f\x96\x3c\xd5\x36\xb6\x42\x7b\x3c\x49\x4d\x5d\xab\x1d\xfc\xfc\xe5\xcb\x2d\x2c\x04\xc9\x1c\x44\xe3\x4a\x06\xb3\x7e\x0c\x08\x15\x20\xc9\x70\x91\x66\x86\x1b\x29\xbc\x0d\x0f\xd7\x37\x5f\x7e\x7f\x7d\xff\xe5\xe7\xfb\xbb\x77\x9f\x1f\x7c\xac\xfa\x47\x1f\xde\xfd\xf6\x30\xaa\xd6\x8d\xb0\x52\x2c\x14\x52\x77\xb3\x8c\x18\xd2\x08\x6f\xb6\xc9\xf7\xde\x9a\x6a\x9c\x80\x81\xec\x33\x2e\xb3\x51\xd8\x46\x30\x92\xbb\x32\x9b\x30\x38\x80\x13\x26\x1b\xf9\x23\xb8\x20\x2c\x77\xb0\x60\x18\x91\x8b\xbc\x64\xec\xae\x47\x85\xd9\xdf\x47\xd9\x53\xcc\x7d\x16\x71\x31\xb6\xbd\x70\x46\x07\xda\xe5\x94\x3f\x38\xf3\x42\x72\xa1\x3b\x1f\xbb\x12\x29\x4e\xe4\xe1\x12\xe2\xb6\x86\xb5\x6c\xd8\x4f\xbe\x5d\xf8\x4d\x9a\x0f\x2d\x94\x66\xeb\x17\x47\x46\x6b\xcc\x7d\xc8\xa4\x1b\x27\x7e\x92\xf4\x06\xf8\xad\x01\x0b\xbf\xea\x1f\xa5\xed\x6d\x29\xa5\x4d\x9e\xe6\xaa\x21\x87\x36\xe5\xe9\xa3\x62\x97\xdc\x53\x68\x94\x83\x2b\xde\x04\xd2\x9b\xdb\x91\x51\xdc\x33\x09\x9d\x5f\x4c\x8d\xcb\x72\xd0\xa1\xa3\xe7\xec\x72\x96\x29\xfd\xaa\x28\xca\xf3\x58\xe3\x96\xfa\x6a\x32\x82\xc8\x92\xa0\x6a\xc8\xaf\xce\xbc\xf7\x24\x16\xa1\x17\x2c\xfc\x54\xf6\x00\xd5\x6f\xcc\x5e\x75\x6b\xa8\xb3\xfd\x42\xec\xe6\xd7\xcc\x27\x70\xb4\x38\x1b\x29\xc2\x93\x2c\x4c\xe7\xa4\x90\xf6\xea\x60\x66\xc7\x6a\x7d\x8e\xe0\xf1\x10\xbc\xfb\xcf\xbf\x84\xcd\x9e\xd0\xab\xf0\xee\x5a\x3a\xbf\x6d\x22\xe9\x8c\xdd\xf5\xb3\xe6\x3d\xc3\xfa\x88\xdd\xa9\x9a\xe3\xb4\x89\x6c\x6f\x4b\xe6\x68\x39\xc5\xb5\xd0\x01\xff\xff\x7b\x15\x57\xe6\x59\x36\xfc\xfd\xe1\xdd\x6f\x67\x7f\x0f\x3b\x2f\x7f\x27\x68\x08\xed\x7c\x50\x36\x8d\x0b\xbd\xbb\xf7\x5d\x4b\xc7\x46\x46\xbd\x8e\x3d\xc7\x85\xd6\x58\x75\xf5\xf8\x78\x8c\xc2\x77\x22\x45\x08\xa3\x0e\x19\x9f\x5b\x49\x17\x29\x92\x45\x97\x89\x64\x85\x2e\x21\x27\xac\xc3\xa3\xad\x6d\x5f\x8b\x85\x15\x3a\x2f\x3b\x45\x7e\xf2\x7f\xed\xeb\xd2\xda\xc1\x9d\x93\x8e\xf1\x60\x20\xcc\x1c\xee\x7c\xc6\xd2\x3f\x8c\xd4\xd1\x81\xe9\x6c\xfa\xbc\x71\xa7\xda\xac\x45\x2e\x85\x3c\x2c\x50\x2a\xa1\xe5\x92\xaf\x38\x5c\xd5\x24\x0b\xb4\x21\x41\xf6\x2e\x8a\x7e\x50\x18\x42\x68\x74\x81\x76\x2f\xeb\x2c\x2a\xe1\xe4\x06\x3d\x82\xa7\xae\x26\x56\xa3\xcc\x3b\xe2\x78\x6f\x26\x35\x8b\x42\xda\x8b\x59\xf8\xf9\xcd\x29\x17\x47\xae\xf3\xdf\x19\x8e\xb9\xce\x2f\xef\x3b\xef\x1f\x50\x9d\x66\x7a\x4f\x68\x8f\x26\x16\xa1\xed\x33\x6b\x8f\xe6\x34\xc7\x77\x95\x90\x47\xd5\x44\x7e\xd1\xf1\x3c\xa0\x7a\x6e\x72\x22\x37\xc8\xad\xe1\xa0\xa0\xf6\xdb\x7c\xf6\x35\x83\x28\xe9\xf6\xf6\x71\xb1\xbf\x5b\x38\xd2\x82\x8d\xab\x13\xe8\xa3\x3b\xd1\xf2\xe2\x53\x57\x7f\x5b\xe3\x0e\x64\xf1\xe3\x29\x64\x19\x69\xc3\x47\x85\x6b\x2c\x8e\x96\x81\x47\x64\xf8\xd7\xbb\xa4\xa7\xa7\x51\xf3\xed\x66\x0f\x48\x07\xa5\x20\x8f\x8a\x8c\x56\x3b\x10\x79\x8e\x14\xe6\x53\x89\x61\x9f\xfe\xaa\x5b\xdd\x3e\x2c\x85\x22\x7c\x38\x9b\x44\xa1\xf8\xdc\xc2\xa9\x63\xd1\xe8\x98\x4e\x4e\x37\x8a\x31\xd9\x91\xf8\x90\xb3\x4d\xee\x82\xbe\x5b\xbf\x59\x61\xb4\xdd\x38\xa0\x9d\xce\x61\x61\xcc\x7a\x8d\x58\x73\xc5\xf4\xaa\x4e\x57\xd2\x4d\x67\x50\xa1\x60\x47\x73\x7b\x06\xe1\xd7\x1d\x6d\x11\x35\x35\x39\x8b\xa2\xea\xab\xe9\x6c\x4f\x31\x66\xcd\xfd\xc9\x21\x37\xb1\xa7\xf3\x45\xe3\x1f\xae\x4b\x9a\x68\x7e\x0b\x0d\xd3\x4e\xc6\xb4\x9b\xae\x11\x93\x57\x98\xae\xd2\x19\xfc\x0b\x19\xe4\xbf\x51\xa6\x29\xce\x52\xbf\x6b\x74\x66\x8d\x61\x5d\x28\xac\x93\x79\xa3\x84\xed\x82\xd1\x72\xd9\x07\x06\xad\xd4\xab\x2d\xf1\x54\xc8\x99\x57\xba\x65\xbe\xe9\xd6\xd8\x35\xf5\xf7\xfe\xbd\x63\x5e\xd0\x95\x58\xe4\x17\xdf\x5c\x1e\xfe\x1f\x1b\xfc\x2e\x64\x5f\xd7\xd1\xfa\xef\x56\x46\x9f\x48\x8d\x8f\x2d\xf5\xf5\x40\xbc\x97\x21\x1d\xbf\x64\xe0\x77\xe5\x21\xf9\xd3\xd9\x72\xec\x88\x17\xfc\x44\xea\xdc\xa1\xdd\x1c\xf9\x30\xc9\x77\xb3\x01\xcf\x71\x8d\xfe\x10\x03\x0b\xb1\xe6\xa1\x1c\xb2\x8c\xd0\x45\x5f\x3b\x5f\x46\x1f\x4c\xa3\x2f\x9f\x1c\x1c\xbf\xc1\xf7\xf7\xa3\x74\x64\xa5\x92\xe4\x50\x27\xad\x0a\x57\xd9\xe5\xf9\xe5\xc5\xa4\xbd\x6b\xbc\x2e\x0a\x19\x76\x53\x0c\x1b\x5e\xf3\x9d\x67\x64\xf2\xf0\x7e\x40\x8e\xa3\x66\x66\x3d\x1c\x79\x86\x4f\xe2\x3f\x40\x3f\xd1\x07\x87\x6f\xd1\x9d\xd0\x5f\xeb\x56\xe4\xdb\x4f\x77\x1d\x0c\xa4\x59\xbf\x81\x6e\x41\x21\xe8\xc2\x38\xea\xb6\xdb\x95\xd8\xf9\x3d\x9f\xda\x0c\x2b\x6b\x4d\xca\x98\x75\x53\x83\x24\x6a\x90\xc0\x68\x20\x53\x21\x7c\x68\x16\x68\x35\x3a\xf4\xeb\xee\xa6\xa6\xe1\x43\x42\xa1\xa9\x5b\x25\x4e\x3f\x19\x8d\xd3\xf8\x4d\xb8\x98\xc5\x9f\x12\x82\x70\x1a\x7f\x5d\xe8\x2e\x58\x5e\xbf\xd1\x9b\xfe\xfa\x3a\xbd\x98\x4e\xfe\x13\x00\x00\xff\xff\x7c\x47\x99\x34\xf4\x1f\x00\x00"),
		},
		"/flux-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-secret.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 137,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x2e\xb0\x82\xed\x1c\x42\x0b\xc1\x7e\xc8\xbe\xc8\x62\xb2\x19\x93\x89\x18\x86\xdc\x5d\x14\x1b\xcb\x9f\xff\xcb\x39\x27\xb5\x7a\xe5\xbc\xd4\xa9\x09\x9e\xc7\x74\xaf\xad\x08\x2e\xec\x66\x7a\x1a\xe9\x5a\xd4\x55\x12\xd0\x74\xa4\xa0\x1f\xd6\x57\xbe\x55\xcf\x85\x36\x4c\x5b\x04\x6a\x8f\xc3\x49\x47\x2e\xa6\x1d\xb1\xef\x3f\xfa\x4d\x41\xc4\xff\x8d\x00\x5b\xf9\x30\xdf\x8c\x82\xb3\xe9\x63\x65\x7a\x07\x00\x00\xff\xff\x40\x21\xa1\xbb\x89\x00\x00\x00"),
		},
		"/memcache-dep.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-dep.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 874,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\xcd\x6e\x9c\x40\x10\x84\xef\x3c\x45\x49\x7b\x0d\x1b\x61\x69\x2f\xdc\xa2\x38\x89\x2c\x25\xd6\x5e\x9c\x7b\x7b\x68\xf0\x28\xf3\x97\xe9\x66\xb3\x04\xf9\xdd\xa3\xd9\x5f\x36\xf6\x9c\x80\xaa\xaf\xa7\xa6\x80\xba\xae\xab\x15\x3c\x7b\x43\xe6\x85\x3b\x74\x9c\x5c\x9c\x3c\x07\xc5\x28\xdc\xe1\x79\xc2\x57\x37\xee\xa1\x11\x07\x47\xb5\x82\x89\x41\xc9\x06\xce\xb0\x9e\x06\x86\x67\xa5\x8e\x94\xd6\x15\x25\xfb\x93\xb3\xd8\x18\x5a\x50\x4a\xf2\x71\xd7\x54\xbf\x6c\xe8\x5a\xdc\x5f\xc6\x56\x67\x7b\x5b\x01\x81\x3c\xb7\xd7\xdd\xe7\x19\xb6\xc7\xfa\x91\x3c\x4b\x22\xc3\x78\x7d\x3d\x99\x0e\xb7\x2d\xe6\xf9\x56\x9d\x67\x70\xe8\x8a\x4d\x12\x9b\x32\x31\x73\x72\xd6\x90\xb4\x68\x2a\x40\xd8\xb1\xd1\x98\x8b\x02\x78\x52\xf3\xf2\x9d\x9e\xd9\xc9\xf1\xc1\x9b\x00\x15\xa0\xec\x93\x23\xe5\x13\xb2\x08\x5b\x96\xbb\xa1\xdf\xe3\x81\x73\x94\xb2\x2e\x5d\x5d\x98\xfa\x5d\xa6\xac\x43\x9b\x0b\xa1\x6d\xd6\x9b\x75\xb3\xb9\xd5\xb7\xa3\x73\xdb\xe8\xac\x99\x5a\x3c\xf4\x8f\x51\xb7\x99\xa5\xd4\x7a\x76\x51\x1e\x16\xf9\x6a\xd4\x1e\x9b\xe6\x0e\xc0\x0a\x3f\x68\x6f\xfd\xe8\xcb\x0e\x31\x4f\xe5\x95\x8e\xc2\x1f\x60\x03\x3c\x0f\xf4\x3c\x29\xcb\x12\x7c\xc0\xc6\xe3\x06\x14\xfb\x97\xd1\xc7\x8c\x18\x18\x56\xd9\x2f\xed\x09\x4d\x73\xd7\x34\x58\xe1\x9e\x7b\x1a\x9d\x22\xc5\x7c\xcd\xb5\x2a\x9e\xdd\xee\x78\xf9\x14\x4c\xf4\x87\x8f\x4c\x23\x06\x56\xb8\x38\x08\x62\x0f\x26\xf3\x82\xcc\xbf\x47\x16\x05\x85\x0e\x99\x25\xc5\x20\xbc\xbe\x0c\x2a\x53\x6f\x4e\x78\xec\xd3\x38\xcb\x41\xaf\x07\x58\x74\xbf\x8d\x59\xdb\x63\xba\x8b\x2c\x6c\xc6\x6c\x75\xfa\x1c\x83\xf2\x5e\xdb\x05\x97\xc7\xf0\x49\x9e\x84\xf3\xff\xcc\x49\xfa\x96\xe3\x98\xde\x6a\xe4\x5c\xfc\xb3\xcd\x76\x67\x1d\x0f\xfc\x45\x0c\x39\xd2\xc3\xaf\xd0\x93\x13\xae\xfe\x05\x00\x00\xff\xff\x5d\x9a\x63\xab\x6a\x03\x00\x00"),
		},
		"/memcache-svc.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-svc.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 206,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x3d\x0e\x02\x21\x10\x46\x7b\x4e\xf1\x5d\x00\x13\x2c\x39\x84\x8d\x89\xfd\x04\x3e\x23\x51\x58\x02\x64\x9b\xc9\xde\xdd\xb0\x6b\xe3\x76\xf3\xf3\xde\xb3\xd6\x1a\xa9\xe9\xc1\xd6\xd3\x52\x3c\x56\x67\xde\xa9\x44\x8f\x3b\xdb\x9a\x02\x4d\xe6\x90\x28\x43\xbc\x01\x8a\x64\x7a\x64\xe6\x20\xe1\xc5\xa8\x8a\xf4\xc4\xe5\x26\x99\xbd\x4a\x20\xb6\xed\x07\xed\xab\x87\xea\xff\x57\x15\x2c\x71\x62\xbd\x32\xcc\x62\x5d\xda\xe8\x73\x00\xec\x39\xbf\x5f\x0f\xc4\xc3\xb9\xab\x73\x06\xe8\xfc\x30\x8c\xa5\x1d\xce\xd9\xf8\x06\x00\x00\xff\xff\x20\x2f\xef\xba\xce\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-config.yaml.tmpl"].(os.FileInfo),
		fs["/flux-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/flux-secret.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-dep.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-svc.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
